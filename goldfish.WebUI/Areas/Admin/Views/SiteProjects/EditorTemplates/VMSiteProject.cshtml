@model VMSiteProject
@{
    var isNew = Model.Id == 0;
}


<form method="post" action="@Url.Action("Edit", "SiteProjects")">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x=>x.Id)

    @if (!isNew)
    {
        @Html.HiddenFor(x => x.DateCreate)
        @Html.HiddenFor(x => x.DateUpdate)
        @Html.HiddenFor(x => x.DateOfPublication)
    }

    <div class="form-group">
        @Html.LabelFor(x => x.Title)
        @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Title)
    </div>

    @if (User.IsInRole("seo") && !isNew)
    {
        <div class="form-group">
            @Html.LabelFor(x => x.TitleUrl)
            <div class="alert alert-warning">
                <p><b>Внимание!</b> Изменение строкового ключа приведет к изменению канонического адреса страницы</p>
            </div>
            @Html.EditorFor(x => x.TitleUrl, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.TitleUrl)
        </div>
    }
    else
    {
        @Html.HiddenFor(x => x.TitleUrl)
    }

    <div class="form-group">
        @Html.LabelFor(x => x.FrontPictureId)
        @Html.EditorFor(x => x.FrontPictureId, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.FrontPictureId)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Html)
        @Html.EditorFor(x => x.Html, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Html)
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(isNew?"Добавить":"Сохранить")</button>
        <a href="@Url.Action("Index")" class="btn btn-default">Назад</a>
    </div>
</form>
@model SxVMManual
@{
    var isNew = Equals(Model.Id, 0);
}

<form method="post" action="@Url.Action("Edit")">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.ModelCoreType)
    @Html.HiddenFor(x => x.DateCreate)

    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.Title, new { @class = "control-label" })
                @Html.EditorFor(x => x.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Title)
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(x => x.Show, new { @class = "control-label" })
                @Html.EditorFor(x => x.Show, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.Show)
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group">
                @Html.LabelFor(x => x.DateOfPublication, new { @class = "control-label" })
                @Html.EditorFor(x => x.DateOfPublication, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.DateOfPublication)
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(x => x.CategoryId, new { @class = "control-label" })
                @Html.EditorFor(x => x.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.CategoryId)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(x => x.FrontPictureId, new { @class = "control-label" })
                @Html.EditorFor(x => x.FrontPictureId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.FrontPictureId)
            </div>
        </div>
        <div class="col-md-2">
            <div class="form-group">
                @Html.LabelFor(x => x.ShowFrontPictureOnDetailPage, new { @class = "control-label" })
                @Html.EditorFor(x => x.ShowFrontPictureOnDetailPage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(x => x.ShowFrontPictureOnDetailPage)
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Foreword, new { @class = "control-label" })
        @Html.EditorFor(x => x.Foreword, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Foreword)
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Html, new { @class = "control-label" })
        <div>
            <a href="#" class="btn btn-default" data-toggle="modal" data-target="#modal-preview">Просмотр</a>
        </div>
        @Html.EditorFor(x => x.Html, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(x => x.Html)
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">@(isNew ? "Добавить" : "Сохранить")</button>
        <a href="@Url.Action("Index")" class="btn btn-default">Назад</a>
    </div>
</form>
